// <auto-generated />
using CartService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CartService.Migrations
{
    [DbContext(typeof(CartDbContext))]
    [Migration("20250223121322_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("CartService.Entities.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartId = 1,
                            TotalPrice = 89.98m,
                            TotalQuantity = 2,
                            UserId = 1
                        },
                        new
                        {
                            CartId = 2,
                            TotalPrice = 26.95m,
                            TotalQuantity = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CartService.Entities.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            CartItemId = 1,
                            CartId = 1,
                            GameId = 101,
                            GameName = "Cyberpunk 2077",
                            Price = 49.99m
                        },
                        new
                        {
                            CartItemId = 2,
                            CartId = 1,
                            GameId = 102,
                            GameName = "The Witcher 3",
                            Price = 39.99m
                        },
                        new
                        {
                            CartItemId = 3,
                            CartId = 2,
                            GameId = 103,
                            GameName = "Dota 2",
                            Price = 0.00m
                        },
                        new
                        {
                            CartItemId = 4,
                            CartId = 2,
                            GameId = 104,
                            GameName = "Minecraft",
                            Price = 26.95m
                        });
                });

            modelBuilder.Entity("CartService.Entities.CartItem", b =>
                {
                    b.HasOne("CartService.Entities.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("CartService.Entities.Cart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
